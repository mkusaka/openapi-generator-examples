=begin
#Swagger Petstore - OpenAPI 3.0

#This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about Swagger at [http://swagger.io](http://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! You can now help us improve the API whether it's by making changes to the definition itself or to the code. That way, with time, we can improve the API in general, and expose some of the new features in OAS3.  Some useful links: - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore) - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)

The version of the OpenAPI document: 1.0.9
Contact: apiteam@swagger.io
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.3.1

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::PetApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PetApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::PetApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PetApi' do
    it 'should create an instance of PetApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::PetApi)
    end
  end

  # unit tests for add_pet
  # Add a new pet to the store
  # Add a new pet to the store
  # @param pet Create a new pet in the store
  # @param [Hash] opts the optional parameters
  # @return [Pet]
  describe 'add_pet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_pet
  # Deletes a pet
  # @param pet_id Pet id to delete
  # @param [Hash] opts the optional parameters
  # @option opts [String] :api_key 
  # @return [nil]
  describe 'delete_pet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_pets_by_status
  # Finds Pets by status
  # Multiple status values can be provided with comma separated strings
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status Status values that need to be considered for filter
  # @return [Array<Pet>]
  describe 'find_pets_by_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for find_pets_by_tags
  # Finds Pets by tags
  # Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tags Tags to filter by
  # @return [Array<Pet>]
  describe 'find_pets_by_tags test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_pet_by_id
  # Find pet by ID
  # Returns a single pet
  # @param pet_id ID of pet to return
  # @param [Hash] opts the optional parameters
  # @return [Pet]
  describe 'get_pet_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_pet
  # Update an existing pet
  # Update an existing pet by Id
  # @param pet Update an existent pet in the store
  # @param [Hash] opts the optional parameters
  # @return [Pet]
  describe 'update_pet test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_pet_with_form
  # Updates a pet in the store with form data
  # @param pet_id ID of pet that needs to be updated
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Name of pet that needs to be updated
  # @option opts [String] :status Status of pet that needs to be updated
  # @return [nil]
  describe 'update_pet_with_form test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for upload_file
  # uploads an image
  # @param pet_id ID of pet to update
  # @param [Hash] opts the optional parameters
  # @option opts [String] :additional_metadata Additional Metadata
  # @option opts [File] :body 
  # @return [ApiResponse]
  describe 'upload_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
